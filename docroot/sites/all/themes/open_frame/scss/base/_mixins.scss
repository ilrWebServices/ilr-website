// WebKit-style focus, lifted from bootstrap
@mixin tab-focus() {
  // Default
  outline: thin dotted;
  // WebKit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

@function randomColor($format:NULL) {
  $red: random(256);
  $green: random(256);
  $blue: random(256);
  $opacity: random(100) / 100;
  @if $format == "hex" {
    @return rgba($red, $green, $blue, 1);
  }
  @else {
    @return rgba($red, $green, $blue, $opacity);
  }

  // Example usage:
  // article.node-teaser {
  //   $s-min: 20;
  //   $s-max: 70;
  //   $l-min: 30;
  //   $l-max: 90;

  //   @for $i from 1 through 8 {
  //     &:nth-child(#{$i}) {
  //       background-color: hsl(random(360),$s-min+random($s-max+-$s-min),$l-min+random($l-max+-$l-min));
  //     }
  //   }
  // }
}

@mixin circularImage($width:100px) {
  width: $width;
  height: $width;
  border-radius: $width / 4;

  a {
    display: block;
    width: $width;
    height: $width;
    position: relative;
    top: 0;
  }

  img, a {
    border-radius:50%;
  }
}

@mixin circularBg($width:100px, $color: rgba(255, 255, 255, 0.8)) {
  position: relative;

  &::before {
    @include center($absolute: true);
    content: '';
    width: $width;
    height: $width;
    background: $color;
    border-radius: $width / 4;
    border-radius: 50%;
  }
}

@mixin roundLink($diameter) {
  border-radius: 50%;
  width: $diameter;
  height: $diameter;

  a {
    border-radius: 50%;
    width: $diameter;
    height: $diameter;

    &:before {
      line-height: $diameter;
    }
  }
}

@mixin addHighlightColors($selector, $css-property, $opacity) {
  $content-types: basic-page, promo, event, spotlight, student-portrait, news-item, youtube-video, experience-report, visiting-fellow;
  $content-type-colors: $basic-page-color, $promo-color, $event-color, $spotlight-color, $student-portrait-color, $news-color, $video-color, $promo-color, $spotlight-color;
  @for $i from 1 through length($content-types) {
    .#{nth($content-types, $i)}#{$selector} {
      #{$css-property}: rgba(nth($content-type-colors, $i), $opacity);
    }
  }
}

@mixin fontFace($family,$src,$weight: normal,$style: normal) {
  @font-face {
    font-family: $family;
    src: url('#{$src}.eot'); // IE9 compat
    src: url('#{$src}.eot?#iefix') format('embedded-opentype'), // IE8 and below
      url('#{$src}.woff') format('woff'), // standards
      url('#{$src}.ttf') format('truetype'), // Safari, Android, iOS
      url('#{$src}.svg##{$family}') format('svg'); // legacy iOS

    font-style: $style;
    font-weight: $weight;
  }
}

@mixin context($old-context, $new-context) {
  @at-root #{selector-replace(&, $old-context, $new-context)} {
    @content;
  }
}

/// Full Width, even outside container
/// @param {bool} $undo [false]
/// @link https://css-tricks.com/full-width-containers-limited-width-parents/ Source
@mixin full-width($undo: false, $offset-left: 0vw) {
  @if $undo {
    margin-left: 0;
    margin-right: 0;
    position: static;
    left: auto;
    right: auto;
    width: auto;
    max-width: 100%;
  } @else {
    width: 100vw;
    max-width: 100vw;
    position: relative;
    left: 50%;
    right: 50%;
    margin-left: -50vw - $offset-left;
    margin-right: -50vw - $offset-left;

    @at-root {
      body[data-menu-position="open"] {
        #{&} {
          display: none;
        }

      }
    }
  }
}

/// Double Width, even outside container
/// @param {bool} $undo [false]
/// @param {val} $offset-left [0vw]
/// @link https://css-tricks.com/full-width-containers-limited-width-parents/ Source
@mixin double-width($undo: false, $offset-left: 0vw) {
  @if $undo {
    margin-left: 0;
    margin-right: 0;
    position: static;
    left: auto;
    right: auto;
    width: auto;
    max-width: 100%;
  } @else {
    width: 200vw;
    max-width: 200vw;
    position: relative;
    left: 100%;
    right: 100%;
    margin-left: -100vw - $offset-left;
    margin-right: -100vw - $offset-left;

    @at-root {
      body[data-menu-position="open"] {
        #{&} {
          display: none;
        }
      }
    }
  }
}

// Responsive video using CSS only
@mixin responsive-video {
  height: 0;
  overflow: hidden;
  padding-top: 35px;
  padding-bottom: 56.25%; // 56.25% = 16x9
  position: relative;

  iframe {
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
  }
}

/// Center.
/// Center an element vertically or horizontally in its container,
/// and optionally horizontally. Option to undo.
/// @param $horizonally-center - center horizontally
/// @param $vertically-center - center vertically
/// @param $absolute-positioning - position absolutely, rather than relatively
/// @param $undo - undo vertical centering on an element it was previously applied to
@mixin center($horizontally: true, $vertically: true, $absolute: false, $undo: false) {
  display: inline-block;
  @if ($absolute) {
    position: absolute;
  } @else {
    position: relative;
  }
  @if ($horizontally == true and $vertically == true) {
    left: 50%;
    top: 50%;
    transform: translateX(-50%) translateY(-50%);
  }

  @if ($vertically == true and $horizontally == false) {
    top: 50%;
    transform: translateY(-50%);
  }

  @if ($horizontally == true and $vertically == false) {
    left: 50%;
    transform: translateX(-50%);
  }

  @if ($undo) {
    position: static;
    left: auto;
    transform: none;
  }
}

@mixin bg-img() {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin fixed-bg() {
  background-position: center center;
  background-size: cover;

  @include large {
    background-attachment: fixed;
  }
}

@mixin overlay($color: $black, $opacity: 0.75) {
  width: 100%;
  height: 100%;
  position: absolute;
  opacity: $opacity;
  background-color: $color;
}

@mixin padded($padding: 1em 0 1em 0) {
  padding: $padding;
}

.padded {
  @include padded;
}

@mixin button-color($bg-color, $hover-color: lighten($bg-color, 10%), $text-color: white) {
  color: $text-color;
  background-color: $bg-color;

  &:focus,
  &:visited {
    background-color: $bg-color;
  }

  &:hover {
    background-color: $hover-color;
  }
}

@mixin set-link($color: $color-link, $underline: false, $underline-color: $cornell-red) {
  color: $color;

  @if $underline {
    border-bottom: 2px solid $underline-color;

    &:hover,
    &:visited {
      border-bottom: 2px solid $underline-color;
    }
  }
}

@mixin button($color: white, $background-color: $student-portrait-color, $hover-color: $spotlight-color) {
  @include framed--button(6px);

  span {
    position: absolute;
    top: -9999px;
    left: -9999px;
  }
}

@mixin image-ratio-hack($percentage: 65%) {
  position: relative;
  overflow: hidden;
  height: 0;
  padding-bottom: $percentage;

  a {
    display: block;
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    top: 0;
  }
}

@mixin container($max-width: $page-max-width) {
  max-width: $max-width;
  margin: 0 auto;
}

@mixin wrapper($max-width: $page-max-width) {
  @include container($max-width);
}

@mixin hidden {
  display: none !important; // revisit whether necessary
  visibility: hidden;
}

@mixin visible($mode: block) {
  display: $mode !important; // revisit whether necessary
  visibility: visible;
}

@mixin hide($breakpoint) {
  @include breakpoint($breakpoint) {
    @include hidden;
  }
}

@mixin show($breakpoint: false, $mode: block) {
  @if $breakpoint {
    @include breakpoint($breakpoint) {
      @include visible($mode);
    }
  }
  @else {
    @include visible($mode);
  }
}

@mixin increase-readability($spread: 20px, $opacity: 0.2) {
  text-shadow: 0 0 $spread rgba(0, 0, 0, $opacity);
}

@mixin bulleted-list($undo: false) {
  @if $undo {
    li::before {
      content: '';
    }
  }
  @else {
    li {
      position: relative;

      &::before {
        content: '\00B7';
        position: absolute;
        top: -5px;
        left: -0.5rem;
        font-size: 3rem;
        line-height: 0.5;
      }
    }
  }
}

@mixin highlighted-box($background-color: $color-course-class-bg) {
  padding: $space;
  background-color: $background-color;

  @include large {
    padding: $double-space;
  }

  h2, h3, h4 {
    font-weight: 400;
  }
}

@mixin readmore-js-link {
  @include adjust-font-size-to(14px);
  @include set-link($underline: true, $underline-color: $cornell-red);

  font-weight: 600;
}
