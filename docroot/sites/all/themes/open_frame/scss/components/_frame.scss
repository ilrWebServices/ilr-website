$frame-width: 20px;

@mixin framed--button($width: 10px, $link-color: $black, $frame-color: $cornell-red) {
  @include non-framed-button($width, $link-color, $frame-color);
  // On hold
  // @include rhythm(1);
  // border: none;
  // border-left: $width / 2  solid $frame-color;
  // border-bottom: $width / 2 solid $frame-color;
  // text-align: center;
  // color: $link-color;
  // padding: $quarter-space $space;
  // padding-top: calc(#{$width} + #{$quarter-space});
  // display: inline-block;
  // font-weight: 600;
  // position: relative;
  // overflow: hidden;
  // background: linear-gradient($frame-color , $frame-color)top left / 30% $width / 2 no-repeat;

  // @include large {
  //   $width: $width;
  //   padding: $half-space $space;
  //   padding-top: calc(#{$width} + #{$half-space});

  //   border-left: $width solid $frame-color;
  //   border-bottom: $width solid $frame-color;
  //   background: linear-gradient($frame-color , $frame-color) top left / 30% $width no-repeat;
  // }
}

@mixin non-framed-button($width: 10px, $link-color: $black, $frame-color: $cornell-red) {
  @include rhythm(1);
  cursor: pointer;
  border: $width / 2  solid $frame-color;
  text-align: center;
  color: $link-color;
  padding: $quarter-space $space;
  // padding-top: calc(#{$width} + #{$quarter-space});
  display: inline-block;
  font-weight: 600;
  position: relative;
  overflow: hidden;

  @include large {
    padding: $half-space $space;
    // padding-top: calc(#{$width} + #{$half-space});
    border: $width solid $frame-color;
  }
}

.button--framed {
  // @include framed--button;
  @include non-framed-button;
}

// @todo: fix
@mixin frame($width: 50px, $color: white, $top: false, $right: false, $bottom: false, $left: false) {
  position: relative;
  display: block;
  z-index: 10;

  &::before,
  &::after {
    content: ' ';
    position: absolute;
    background: $color;
  }
  @if ($top) {
    &::before {
      // width: nth($top, 1);
      width: $top;
      height: $width;
      top: $double-space;

      @if ($right) {
        right: $double-space;
      }
    }
  }
  @if ($right) {
    &::after {
      width: $width;
      height: $right;
      right: $double-space;

      @if ($right > 100%) {
        top: calc(100% - #{$right});
      }

      @if ($top) {

      }
    }
  }
  @if ($bottom) {
    // border-bottom: $width solid $color;
  }
  @if ($left) {
    // border-left: $width solid $color;
  }
}

// Still needs work to improvem this
@mixin frame-from-corner($width: 5px, $corner: left top, $length: 30%, $height: $length, $color: $black) {
  padding: 2 * $width;
  background-image: linear-gradient($color, $color),
    linear-gradient($color, $color);
  background-position: $corner;
  background-repeat: no-repeat;
  background-size: $length $width, $width $height;
}

// Used for headings; possibly could be available to other elements
// Only can currently set the frame on 2 sides
@mixin framed($width: 10px, $color: white, $top: false, $right: false, $bottom: true, $left: true) {
  @if ($top) {
    border-top: $width solid $color;
    padding-top: $space;
    padding-bottom: $space;
    border-bottom: none;

    @include large {
      border-top: $width * 2 solid $color;
      padding-top: $double-space;
      border-bottom: none;
    }
  }
  @if ($right) {
    border-right: $width solid $color;
    padding-right: $space;
    border-left: none;
    padding-left: $space;

    @include large {
      border-right: $width * 2 solid $color;
      padding-right: $double-space;
      border-left: none;
      padding-left: $double-space;
    }

  }
  @if ($bottom) {
    border-bottom: $width solid $color;
    padding-bottom: $space;
    padding-top: $space;
    border-top: none;

    @include large {
      border-bottom: $width * 2 solid $color;
      padding-top: $triple-space;
      border-top: none;
    }
  }
  @if ($left) {
    border-left: $width solid $color;
    padding-left: $space;
    border-right: none;

    @include large {
      border-left: $width * 2 solid $color;
      padding-left: $double-space;
      border-right: none;
    }
  }
}

.frame {
  position: relative;
  // @include frame;
}

// .microsite-marquee {
//   // @include frame--grid;
//   display: grid;
//   grid-template-columns: 8.5% auto 8.5%;
//   grid-template-rows: 50% 17% auto;

//   p {
//     display: contents;
//   }

//   img {
//     grid-column-start: 1;
//     grid-column-end: span 3;
//     grid-row-start: 1;
//     grid-row-end: span 2;
//   }

//   .video-callout {
//     grid-column-start: 2;
//     grid-column-end: span 1;
//     grid-row-start: 3;
//     // grid-row-end: span 2;
//   }
// }

.body__frame {
  @include transition-duration(.3s);
  position: absolute;
  width: 100%;
  border-top: $frame-width / 2 solid $black;
  top: 0;
  left: 0;
  z-index: 5;

  @include large {
    border-top: $frame-width solid $black;
  }

  &::after {
    content: " ";
    position: absolute;
    background: $black;
    top: 0;
    height: 30px;
    right: 0;
    width: $frame-width / 2;
    z-index: 1;

    @include medium {
      height: 100px;
    }

    @include large {
      width: $frame-width;
    }
  }

  span.side--left {
    @include transition-duration(.3s);

    display: block;
    position: absolute;
    left: 0;
    top: 0;
    width: $frame-width / 2;
    height: 80px;
    background: $black;

    @include medium {
      height: 250px;
    }

    @include large {
      height: 375px;
      width: $frame-width;
    }

    @include xl {
      height: 200px;
    }
  }
}
