<?php
/**
 * @file
 * Code for the Youtube Videos feature.
 */

include_once 'youtube_videos.features.inc';
/**
 * Gets the nid for youtube Video Id
 * @param $video_id
 * @return int | NULL
 */
function youtube_videos_get_nid_from_video_id($video_id) {
  $video_nids = & drupal_static(__FUNCTION__);
  if (!isset($video_nids)) {
    $video_nids = array();
  }
  else {
    if (isset($video_nids[$video_id])) {
      return $video_nids[$video_id];
    }
  }
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'youtube_video')
    ->fieldCondition('field_youtube_video', 'video_id', $video_id);
  $result = $query->execute();
  if (isset($result['node'])) {
    $video_nids[$video_id] = array_shift(array_keys($result['node']));
  }
  else {
    $video_nids[$video_id] = NULL;
  }
  return $video_nids[$video_id];
}

/**
 * Implements hook_feeds_presave().
 *
 * Don't let tags be wiped out by Youtube update.
 */
function youtube_videos_feeds_presave($source, $entity, $item, $entity_id) {
  if ($source->importer->id == 'youtube_importer') {
    $node_wrapper = entity_metadata_wrapper('node', $entity);
    $new_tids = $node_wrapper->field_tags->raw();

    if (empty($entity->is_new)) {
      // If the Node isn't new then we have to add pack any tags that were removed.
      // This is the only way to ensure that tags added on Drupal aren't erased on Youtube update.
      // Must load unchanged or entity_load will bring back working copy by reference.
      $current_node = entity_load_unchanged('node', $entity->nid);
      $current_node_wrapper = entity_metadata_wrapper('node', $current_node);
      $current_tids = $current_node_wrapper->field_tags->raw();
      // Add old tids to new tids.
      $new_tids = array_unique(array_merge($new_tids, $current_tids));
      $node_wrapper->field_tags->set($new_tids);
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * For form youtube_video_node_form
 * Remove access to most fields for Youtube nodes that were imported from a feed.
 *
 */
function youtube_videos_form_youtube_video_node_form_alter(&$form, &$form_state, $form_id) {
  if (!empty($form['nid']['#value'])) {
    $node = $form['#node'];
    // Determine if this node was imported via Feeds.
    $from_feed = !(feeds_get_feed_nid($node->nid, 'node') === FALSE);
    if ($from_feed) {
      $no_access_fields = array(
        'title',
        'body',
        'field_playlists',
        'field_youtube_video'
      );
      foreach ($no_access_fields as $field_name) {
        if (isset($form[$field_name])) {
          $form[$field_name]['#access'] = FALSE;
        }
      }
    }
  }
}