<?php
/**
 * @file
 * Code for the People Profiles feature.
 */

include_once 'people_profiles.features.inc';

/**
 * Implements hook_preprocess_node
 *   Checks to see whether the Use AI flag has been set
 *   Removes appropriate columns based on the flag
 */
function people_profiles_preprocess_node(&$variables) {
  if($variables['type'] == 'people_profile') {
    if ($variables['field_profile_type'][0]['value'] == 'faculty') {
      _people_profiles_process_faculty_view($variables);
    }
    _people_profiles_process_address($variables);
  }
}

/**
 * Implements hook_form_alter
 * Removes the editable AI fields and replaces them with rendered content
 * Adds the js file that displays a message to the user
 */
function people_profiles_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'people_profile_node_form') {
    foreach ($form as $field_name => $value) {
      if (strpos($field_name, 'field_ai') === 0) {
        $content = $form[$field_name]['und'][0]['value']['#default_value'];
        $form[$field_name]['und'][0] = array(
          '#title' => $field_name,
          '#markup' => '<div class="field-ai"><h3>'.$form[$field_name]['und'][0]['#title'].'</h3>' . $content . '</div>',
        );
      }
    }
  }
}

/**
 * Custom function to process faculty profiles
 * by hiding either the ilrweb or activity insight fields
 * This only gets called if the profile is a faculty
 */
function _people_profiles_process_faculty_view(&$variables) {
  // This assumes a common naming convention for irlweb and ai fields,
  // which get set during the initial field creation process in the UI
  $use_activity_insight = $variables['field_use_ai_data'][0]['value'];
  $field_name_prefix =
    ($use_activity_insight)
      ? 'field_ilrweb'
      : 'field_ai';
  if ($use_activity_insight) { // Deal with optional fields
    _people_profiles_process_optional_ai_elements($variables);
  }
  _people_profiles_hide_fields_with_prefix($variables, $field_name_prefix);
}

/**
 * Custom function to remove the local address if there is a campus address
 * Many people erringly put a local address when they shouldn't
 * But all people without a campus address use the local address
 */
function _people_profiles_process_address(&$variables) {
  if(count($variables['field_address_line_1']) > 0) {
    unset($variables['content']['field_local_address']);
  }
}

function _people_profiles_hide_fields_with_prefix(&$variables, $prefix) {
  foreach ($variables as $key => $value) { // $key is the field name
    if (strpos($key, $prefix) === 0) {
      unset($variables['content'][$key]);
    }
  }
}

/**
 * Custom function to return optional fields populated from AI
 * Add any AI fields here that faculty can choose to toggle on/off
 * Naming conventions map array keys to field machine name
 * Also see allowed_values_function in people_profiles.features.field_base.inc
 */
function _people_profiles_activity_insight_options_list() {
  return array(
    'field_ai_overview' => 'Overiew',
    //'field_ai_outreach_activities' => '',
    'field_ai_professional_activities' => 'Professional Activities',
    'field_ai_honors_awards' => 'Honors and Awards',
    'field_ai_publications' => 'Publications',
    'field_ai_teaching_statement' => 'Teaching Statement',
    'field_ai_research_statement' => 'Research Statement',
  );
}

/**
 * Loops through people profile elements and checks visiblity settings
 * See _people_profiles_activity_insight_options_list for the values that are
 * output as checkboxes that can be enabled
 */
function _people_profiles_process_optional_ai_elements(&$variables) {
  $enabled_fields = _people_profiles_get_visible_ai_fields($variables['field_visibility_settings']);

  $optional_fields = array_keys(_people_profiles_activity_insight_options_list());
  foreach ($variables as $field_name => $value) {
    if (in_array($field_name, $optional_fields)) {
      if (!in_array($field_name, $enabled_fields)) {
        unset($variables['content'][$field_name]);
      }
    }
  }
}

/**
 * Determines which checkboxes have been selected from the field_visibility_settings
 * @param  Array $field_visibility_settings
 * @return Array A single dimensional array with the fieldnames as string values
 */
function _people_profiles_get_visible_ai_fields($field_visibility_settings) {
  $enabled_fields = array();
  foreach ($field_visibility_settings as $key => $value) {
    $enabled_fields[] = $value['value'];
  }
  return $enabled_fields;
}
