<?php
/**
 * @file
 * Code for the News feature.
 */

include_once 'news.features.inc';

/**
 * Implements hook_bean_types_api_info().
 */
function news_bean_types_api_info() {
  return array('api' => 4);
}

/**
 * Implements hook_node_view().
 * Redirects articles with external urls
 */
function news_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'news_item' && $view_mode == 'full') {
    $wrapper = ilr_get_node_wrapper($node);
    if ($url_array = $wrapper->field_website_url->value()) {
      $url = (isset($url_array['url']))
        ? $url_array['url']
        : $url_array[0]['url'];
      drupal_goto($url, array('external' => TRUE));
    }
  }
}

/**
 * Implements hook_preprocess_hook()
 * Makes the short title the title
 * Replaces the link when external url is present
 */
function news_preprocess_node(&$variables) {
  if ($variables['type'] == 'news_item') {
    if ($variables['view_mode'] == 'teaser') {
      if (count($variables['field_short_title']) > 0) {
        $wrapper = ilr_get_node_wrapper($variables['node']);
        $variables['title'] = news_get_news_title($wrapper);
      }
      if (count($variables['field_website_url'])) {
        $external_url = $variables['field_website_url'][LANGUAGE_NONE][0]['url'];
        $variables['node_url'] = $external_url;
        if (count($variables['field_image'])) {
          $variables['content']['field_image'][0]['#path']['path'] = $external_url;
        }
      }
    }
  }
}

/**
 * Removes images from News stories body field
 *
 * @todo function to .install file. Here to run from drush in testing.
 */
function _news_bulk_remove_images() {
  $field_values = _news_get_field_images_to_remove();
  foreach($field_values as $nid => $field_row) {
    $new_body = preg_replace('/<img[^|]+\|\|CPIMAGE[^>]+>/i', '', $field_row->old_body);
    $result = db_update('field_data_body')
      ->fields(array('body_value' => $new_body))
      ->condition('entity_id', $field_row->entity_id)
      ->condition('revision_id', $field_row->revision_id)
      ->condition('bundle', 'news_item')
      ->condition('entity_type', 'node')->execute();

  }
  $field_values = _news_get_field_images_to_remove();
  if ($field_values) {
    // not empty so output
    $nids_list = implode(',', array_keys($field_values));
    watchdog('news', 'Nids with images not removed: ' . $nids_list, array(), WATCHDOG_ERROR);
  }
}

/**
 * @return array
 */
function _news_get_field_images_to_remove() {
  $sql = 'select entity_id, revision_id, body_value as old_body'
    . ' from field_data_body'
    . " where bundle ='news_item' and entity_type = 'node' "
    . " and body_value REGEXP '<img[^>]+>'"
    . " and body_value REGEXP 'CPIMAGE'";
  $field_values = db_query($sql)->fetchAllAssoc('entity_id');
  return $field_values;
}

/**
 * Implements date_select_process_alter();
 *
 * Reverse Years in News article filter.
 */
function news_date_select_process_alter(&$element, $form_state, $context) {
  if (isset($form_state['view']) && $form_state['view']->name == 'news_archive') {
    $all_years_option = array('' => t('Complete Archive'));
    $element['year']['#options'] = $all_years_option + array_reverse($element['year']['#options'], TRUE);
  }
}

function news_get_news_title($wrapper) {
  $title = $wrapper->label();
  if (isset($wrapper->field_short_title) && !empty($wrapper->field_short_title->value())) {
    $title = $wrapper->field_short_title->value();
  }
  return $title;
}

function news_get_news_summary($wrapper) {
  $title = $wrapper->label();
  if (isset($wrapper->field_short_title) && !empty($wrapper->field_short_title->value())) {
    $title = $wrapper->field_short_title->value();
  }
  return $title;
}
