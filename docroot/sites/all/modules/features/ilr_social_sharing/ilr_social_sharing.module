<?php
/**
 * @file
 * Code for the ILR Social Sharing feature.
 */

include_once 'ilr_social_sharing.features.inc';


/**
 * Implements hook_menu
 * Defines the MAI RSS Feed Path
 */
function ilr_social_sharing_menu() {
  $items = array();
  $items['rss/rss.xml'] = array(
    'title' => 'RSS Feed',
    'page callback' => '_ilr_social_sharing_rss_feed',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_preprocess().
 */
function ilr_social_sharing_preprocess_node(&$variables) {
  $enabled_bundles = _ilr_social_sharing_get_enabled_bundles();
  if ($variables['view_mode'] == 'full') {
    _ilr_social_sharing_add_og_tags($variables);

    // Add sharing buttons on some content types
    if (in_array($variables['type'], $enabled_bundles)) {
      _ilr_social_sharing_add_social_buttons($variables);
    }

    // Add the js
    drupal_add_js(drupal_get_path('module','ilr_social_sharing') . '/ilr_social_sharing.js', array('type' => 'file', 'scope' => 'footer'));
  }
}

function _ilr_social_sharing_add_og_tags($vars) {
  $tag_data = _ilr_social_sharing_get_meta_tag_properties_and_content($vars);

  foreach ($tag_data as $property => $content) {
    $tag = array(
      '#tag' => 'meta',
      '#attributes' => array(
        'property' => $property,
        'content' => $content,
      ),
    );
    drupal_add_html_head($tag, str_replace(':', '_', $property));
  }
}

function _ilr_social_sharing_add_social_buttons(&$variables) {
  $variables['content']['social_share'] = array(
    '#markup' => _ilr_social_sharing_get_social_share_markup(),
    '#weight' => _ilr_social_sharing_get_social_share_weight($variables['content']),
  );
}

function _ilr_social_sharing_get_class_year_from_date($node, $field) {
  $formatted_year = '';
  if (isset($node->{$field})) {
    $year = $node->{$field}[LANGUAGE_NONE][0]['value'];
    $formatted_year = " '" . substr($year, 2, 2);
  }
  return $formatted_year;
}

/**
 * Returns a summary of the body field
 * @todo
 *  - Fix for class nodes, so that course summary gets returned
 */
function _ilr_social_sharing_get_description($node) {
  $summary = '';
  if (!empty($node->field_teaser)) {
    $summary = $node->field_teaser[LANGUAGE_NONE][0]['value'];
  } elseif (!empty($node->field_description)) {
    $summary = $node->field_description[LANGUAGE_NONE][0]['safe_value'];
  } elseif (!empty($node->body)) {
    $summary = (!empty($node->body[LANGUAGE_NONE][0]['summary']))
      ? $node->body[LANGUAGE_NONE][0]['summary']
      : text_summary(trim($node->body[LANGUAGE_NONE][0]['value']), NULL, 200);
  } elseif (!empty($node->field_para_main_page_content[LANGUAGE_NONE])) {
    $pid = $node->field_para_main_page_content[LANGUAGE_NONE][0]['value'];
    $paragraph = entity_load('paragraphs_item', [$pid]);
    $wrapper = entity_metadata_wrapper('paragraphs_item', $pid);
    if (isset($wrapper->field_text_paragraph)) {
      $text = $wrapper->field_text_paragraph->value()['value'];
      $summary = text_summary(trim($text), NULL, 200) . '...';
    }
  }
  return trim(strip_tags($summary));
}

function _ilr_social_sharing_get_enabled_bundles() {
  return [
    'news_item',
    'post',
    'reflection',
    'sdc_course',
    'sdc_class',
    // 'channel_page', // removing temporarily
    'experience_report',
    'student_portrait',
    'visiting_fellow',
  ];
}

function _ilr_social_sharing_get_image($node,$image_style) {
  if ($image = field_get_items('node', $node, 'field_image')) {
    $image_path = image_style_url($image_style, $image[0]['uri']);
    return $image_path;
  }
  return '';
}

function _ilr_social_sharing_get_meta_tag_properties_and_content($vars) {
  global $base_url;
  $description = _ilr_social_sharing_get_description($vars['node']);
  $site = variable_get('site_name');
  return array(
    "twitter:card"            => 'summary',
    "twitter:site"            => $site,
    "twitter:title"           => $vars['title'],
    "twitter:description"     => $description,
    "twitter:creator"         => 'The ILR School',
    "twitter:image"           => _ilr_social_sharing_get_image($vars['node'], 'twitter_share'),
    "og:title"                => htmlspecialchars_decode($vars['title']),
    "og:type"                 => 'website',
    "og:url"                  => $base_url . '/' .drupal_get_path_alias(current_path()),
    "og:image"                => _ilr_social_sharing_get_image($vars['node'], 'facebook_share'),
    "og:description"          => $description,
    "og:site_name"            => $site,
    "fb:admins"               => '122623604426831', //based on http://findmyfacebookid.com/ and https://graph.facebook.com/ILRSchool
  );
}

function _ilr_social_sharing_get_social_share_markup() {
  $channels = array('twitter','facebook','linkedin','mail');
  $markup = '<ul class="social-share">';
  foreach ($channels as $key => $channel) {
    $markup .= "  <li><a class='$channel' alt='Share on $channel' title='Share on $channel' href='#'><span>$channel</span></a></li>\n";
  }
  $markup .= '</ul>';
  return $markup;
}

function _ilr_social_sharing_get_social_share_weight($content) {
  if (isset($content['field_image'])) {
    return $content['field_image']['#weight'] + .5;
  }
  return -1;
}



//////////////////////////////////////
/// RSS feed related functionality ///
//////////////////////////////////////



function _ilr_social_sharing_rss_feed() {
  $params = drupal_get_query_parameters();
  $types = (isset($params['types']))
    ? $params['types']
    : NULL;
  $category = (isset($params['category']))
    ? $params['category']
    : NULL;
  if ($types && $category) {
    $nids = _ilr_social_sharing_get_nids_by_type_and_category($types, $category);
    $link = url(current_path(), array('absolute' => true));
    $channel = array(
      'title' => t(''),
      'description' => 'The ILR School at Cornell University is advancing the world of work through teaching, research and outreach. ILR\'s mission is to prepare leaders, inform national and international employment and labor policy, and improve working lives.',
      'link' => $link,
    );
    _ilr_social_sharing_feed($nids, $channel);
  }
  else {
    return ilr_social_sharing_EMPTY_FEED_MESSAGE;
  }
}

/**
 * Retrieves the specified number of nids
 * for the RSS feed
 */
function _ilr_social_sharing_get_nids_by_type_and_category($types, $category, $count = 15) {
  if ($tag = taxonomy_get_term_by_name($category, 'tags')) {
    $key = key($tag);
    $term_object = $tag[$key];
    $query = new EntityFieldQuery();
      $query
        ->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', $types, 'IN')
        ->propertyCondition('status', 1)
        ->fieldCondition('field_tags', 'tid', $term_object->tid)
        ->fieldOrderBy('field_published_date', 'value', 'DESC')
        ->range(0, $count);

      $result = $query->execute();
      return array_keys($result['node']);
  }
  return array();
}

/**
 * Custom implementation of node_feed that is formatted for mailchimp
 * @see node_feed() in node.module
 */
function _ilr_social_sharing_feed($nids = FALSE, $channel = array()) {
  global $base_url, $language_content;

  $namespaces = array(
    'xmlns:dc'      => 'http://purl.org/dc/elements/1.1/',
    'xmlns:content' => 'http://purl.org/rss/1.0/modules/content/',
    'xmlns:media'   => 'http://search.yahoo.com/mrss/',
  );

  // Load all nodes to be rendered.
  $nodes = node_load_multiple($nids);
  $items = '';
  $params = drupal_get_query_parameters();
  $prefix = (isset($params['site']))
    ? $params['site'] . '/'
    : '';
  foreach ($nodes as $node) {
    $wrapper = ilr_get_node_wrapper($node);
    $summary = '';
    $alias = $prefix . drupal_get_path_alias("node/$node->nid");
    $node->link = url($alias, array('absolute' => TRUE));
    $node->rss_namespaces = array();
    $account = user_load($node->uid);
    $node->rss_elements = array(
      array('key' => 'pubDate', 'value' => gmdate('r', $node->created)),
      array('key' => 'dc:creator', 'value' => format_username($account)),
      array('key' => 'guid', 'value' => $node->nid . ' at ' . $base_url, 'attributes' => array('isPermaLink' => 'false'))
    );
    // Check url param for full vs. teaser
    $view_mode = (isset($params['view']) && $params['view'] == 'full')
      ? 'full'
      : 'summary';
    $text = _ilr_social_sharing_get_node_body($wrapper, $view_mode);
    $content = _ilr_social_sharing_format_content_for_mailchimp($node, $view_mode, $text, $wrapper);
    $items .= _ilr_social_sharing_format_rss_item($node->title, $node->link, _ilr_social_sharing_node_summary($wrapper), $content, $node->rss_elements);
  }

  $channel_defaults = array(
    'version'     => '2.0',
    'title'       => variable_get('site_name', 'Drupal'),
    'link'        => $base_url,
    'description' => variable_get('feed_description', ''),
    'language'    => $language_content->language
  );
  $channel_extras = array_diff_key($channel, $channel_defaults);
  $channel = array_merge($channel_defaults, $channel);

  $output = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n";
  $output .= "<rss version=\"" . $channel["version"] . "\" xml:base=\"" . $base_url . "\" " . drupal_attributes($namespaces) . ">\n";
  $output .= format_rss_channel($channel['title'], $channel['link'], $channel['description'], $items, $channel['language'], $channel_extras);
  $output .= "</rss>\n";

  drupal_add_http_header('Content-Type', 'application/rss+xml; charset=utf-8');
  print $output;
}

function _ilr_social_sharing_format_rss_item($title, $link, $summary, $content, $args = array()) {
  $output = "<item>\n";
  $output .= ' <title>' . check_plain($title) . "</title>\n";
  $output .= ' <link>' . check_url($link) . "</link>\n";
  $output .= ' <description>' . check_plain(strip_tags($summary)) . "</description>\n";
  $output .= ' <content:encoded><![CDATA['.$content."]]></content:encoded>\n";
  $output .= format_xml_elements($args);
  $output .= "</item>\n";
  return $output;
}

function _ilr_social_sharing_format_content_for_mailchimp($node, $view_mode, $text, $wrapper) {
  $content = '';
  $image_path = (!empty($wrapper->field_image->value()))
    ? image_style_url('email_optimized',$wrapper->field_image->file->value()->uri)
    : '';
  if (!empty($image_path)) {
    $content = '<a href="'.$node->link.'"><img src="'.$image_path.'"></a><br>';
  }
  $content .= '<h1>'.$node->title.'</h1>';
  $subheading = (isset($wrapper->field_description))
    ? $wrapper->field_description->value()
    : '';
  if (!empty($subheading)) {
    $content .= '<h2>'.$subheading .'</h2>';
  }
  $formatted_date = _ilr_social_sharing_get_formatted_date($wrapper);
  $author = (isset($wrapper->field_author_reference))
    ? $wrapper->field_author_reference->label()
    : format_username(user_load($node->uid));
  $content .= $author.', '.$formatted_date.'<br><br>';
  if ($view_mode == 'full') {
    $link_text = 'View this article on website&nbsp;&rarr;';
    $br_count = 2;
  }
  else {
    $link_text = 'Continue reading on website&nbsp;&rarr;';
    $br_count = 1;
  }
  $content .= _ilr_social_sharing_replace_p_tags_with_breaks($text, $br_count);
  $content .= ' <a href="'.$node->link.'">'.$link_text.'</a>';
  return $content;
}

function _ilr_social_sharing_replace_p_tags_with_breaks($content, $number) {
  $replaced = preg_replace("/<p[^>]*?>/", "", $content);
  if ($number == 2) {
    $replaced = str_replace("</p>", "<br><br>", $replaced);
  }
  else {
    $replaced = str_replace("</p>", "<br>", $replaced);
  }
  return $replaced;
}

function _ilr_social_sharing_node_summary($wrapper) {
  $summary = (!empty($wrapper->body->value()['summary']))
    ? $wrapper->body->value()['summary']
    : text_summary($wrapper->body->value()['value']);
  return $summary;
}

function _ilr_social_sharing_get_node_body($wrapper, $view_mode) {
  if ($view_mode == 'full') {
    $text = $wrapper->body->value()['value'];
  }
  else {
    $text = _ilr_social_sharing_node_summary($wrapper);
  }
  return $text;
}

function _ilr_social_sharing_get_formatted_date($wrapper) {
  $date = (isset($wrapper->field_published_dates))
    ? $wrapper->field_published_date->value()
    : $wrapper->created->value();
  return format_date($date, 'custom', 'F j, Y');
}
