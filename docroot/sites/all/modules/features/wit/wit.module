<?php
/**
 * @file
 * Code for the WIT feature.
 */

include_once 'wit.features.inc';

/**
 * Implements hook_node_update()
 * Checks to see if a WIT article is being published
 *   - publishes all unpublished articles
 *   - todo: send the WIT email
 */
function wit_node_update($node) {
  if($node->type == "wit_article") {
    if ($node->original->status == 0 && $node->status == 1) {
      $article_date = $node->field_published_date['und'][0]['value'];
      _wit_publish_daily_articles($article_date);
    }
  }
}

/**
 * Implements hook_preprocess_hook()
 *
 *  Formats the WIT articles
 */
function wit_preprocess_node(&$variables) {
  if ($variables['type'] == 'wit_article') {
    $variables['content']['link'] = array(
      '#markup' => _wit_build_reference($variables),
      '#weight' => 10,
    );
    // Remove the variables we needed for the reference
    unset($variables['content']['field_article_title']);
    unset($variables['content']['field_website_url']);
    unset($variables['content']['field_author']);
    unset($variables['content']['field_term_publication']);
    unset($variables['content']['field_term_wire_service']);
    unset($variables['content']['field_published_date']);
  }
}

/**
 * Custom function to publish all articles for a given day
 *
 */
function _wit_publish_daily_articles($article_date) {
  $query = new EntityFieldQuery();

  $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'wit_article')
    ->propertyCondition('status', 0)
    ->fieldCondition('field_published_date', 'value', $article_date);

  $result = $query->execute();

  if (empty($result)) {
    drupal_set_message(t("Today's WIT articles have been published."), 'status');
  }
  else {
    foreach ($result['node'] as $node) {
      $node = node_load($node->nid, $node->vid);
      $node->status = 1;
      node_save($node);
    }
  }
}

/**
 * Custom function for outputting the article reference
 *
 */
function _wit_build_reference($variables) {
  $title = $variables['field_article_title'][0]['value'];
  $url = $variables['field_website_url'][0]['url'];
  $link = "<a href='{$url}' target='_blank'>{$title}</a>,";
  $author = $variables['field_author'][0]['value'];
  $publication = $variables['field_term_publication'][0]['taxonomy_term']->name;
  $service = (count($variables['field_term_wire_service']) > 0) ? $variables['field_term_wire_service'][0]['taxonomy_term']->name : '';
  // Convert the Date string to a date object
  $date_object = date_create($variables['field_published_date'][0]['value'], timezone_open('America/New_York'));
  // Format the date object
  $published = date_format($date_object, 'M d Y');
  $reference = "<div class='reference'><p>See \"{$link}\" by {$author}, {$publication}, {$service}, {$published}</p></div>";
  return $reference;
}
