<?php

/**
 * Deletes entityform field instances needing to be changed
 */
function forms_update_7001() {
  // Every key has to be different, so don't imitate this array
  //   if two fields are being removed from the same form!
  $fields_info = array(
    'employee_recognition_nomination_' => 'field_name_title',
    'job_postings_for_ilr_alumni' => 'field_name_title',
    'graduate_student_request_for_tea' => 'field_degree_program',
  );

  foreach ($fields_info as $form_id => $field_name) {
    $field_instances_to_remove = array (
      $field_name,
    );
    _forms_delete_field_instances_from_entityform($form_id,
      $field_instances_to_remove);
  }
}

/**
 * Delete field_h_postdate field instance
 */
function forms_update_7002(&$sandbox) {
  $field_instances_to_remove = array (
    'field_h_postdate',
  );
  _forms_delete_field_instances_from_entityform('job_postings_for_ilr_alumni',
      $field_instances_to_remove);
}

/**
 * Delete three fields from social_impact_career_forum_reg entityform type
 */
function forms_update_7003() {
  $field_instances_to_remove = array (
    'field_how_heard_other',
    'field_how_heard_sicf',
    'field_career_fields_sicf',
  );
  _forms_delete_field_instances_from_entityform('social_impact_career_forum_reg',
      $field_instances_to_remove);
}

/**
 * Re-send emails that were missed due to 3/9/15 mail setting bug
 */
function forms_update_7004() {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', "entityform");
  $query->propertyCondition('entityform_id', array(6346, 6336, 6331, 6326, 6316, 6311, 6306, 6301, 6296, 6291, 6286, 6281, 6271, 6266, 6261, 6256, 6251, 6246, 6236, 6226), "IN");
  $result = $query->execute();
  if (isset($result['entityform'])) {
    $submissions = $result['entityform'];
    foreach ($submissions as $submission) {
      $entityform = entityform_load($submission->entityform_id);
      _forms_process_entityform($entityform);
    }
  }
}

/**
 * Delete entityform submissions for social_impact_career_forum_reg
 */
function forms_update_7005() {
  _forms_delete_entityform_submissions('social_impact_career_forum_reg');
}

/**
 * Removes field_h_credit_card_payments from alumni event forms
 */
function forms_update_7006() {
  if ($instance = field_info_instance('entityform', 'field_h_credit_card_payments', 'ilr_alumni_association_event_reg')) {
    field_delete_instance($instance, TRUE);
  }
}

/**
 * 7/25/2016: Delete fields from contact_ilr_admissions entityform type
 */
function forms_update_7007() {
  $field_instances_to_remove = array (
    'field_send_transfer_info',
    'field_high_school',
    'field_year_as_list_text',
  );
  _forms_delete_field_instances_from_entityform('contact_ilr_admissions',
      $field_instances_to_remove);
}

/**
 * Delete subm from join_the_hcd_mailing_list and career_and_networking_panels
 */
function forms_update_7008() {
  _forms_delete_entityform_submissions('join_the_hcd_mailing_list');
  _forms_delete_entityform_submissions('career_and_networking_panels');
}

/**
 * Remove all traces of entityform type join_the_hcd_mailing_list
 */
function forms_update_7009() {
  // 1. Remove the submissions - complete; see previous update hook.

  // 2. Delete the field instances
  $fields_info = field_info_instances('entityform', 'join_the_hcd_mailing_list');
  $delete_count = 0;
  foreach ($fields_info as $field_in_form => $field_array) {
    $field_name = $field_array['field_name'];
    if ($instance = field_info_instance('entityform', $field_name,
      'join_the_hcd_mailing_list')) {
        field_delete_instance($instance, TRUE);
        $delete_count++;
    }
  }

  // 3. Delete the entityform type itself
  if ($entityform_type = entityform_type_load('join_the_hcd_mailing_list')) {
    entityform_type_delete($entityform_type);
  }

  // 4. Purge the deleted field, plus a few extras just in case
  field_purge_batch($delete_count + 5);
}

/**
 * Delete subm from labor_roundtable_student_registr
 */
function forms_update_7010() {
  _forms_delete_entityform_submissions('labor_roundtable_student_registr');
}

/**
 * Delete subm from emediation_competition_reg
 */
function forms_update_7011() {
  _forms_delete_entityform_submissions('emediation_competition_reg');
}

/**
 * Removes field_subscribe_or_unsubscribe
 */
function forms_update_7012() {
  field_delete_field('field_subscribe_or_unsubscribe');
  field_purge_batch(3);
}

/**
 * Delete subm from EMHRM check_your_eligibility
 */
function forms_update_7013() {
  _forms_delete_entityform_submissions('check_your_eligibility');
}

/**
 * Remove all traces of entityform type check_your_eligibility (emhrm)
 */
function forms_update_7014() {
  $fields_info = field_info_instances('entityform', 'check_your_eligibility');
  foreach ($fields_info as $field_in_form => $field_array) {
    $field_name = $field_array['field_name'];
    if ($instance = field_info_instance('entityform', $field_name,
      'check_your_eligibility')) {
        field_delete_instance($instance, TRUE);
        $delete_count++;
    }
  }

  if ($entityform_type = entityform_type_load('check_your_eligibility')) {
    entityform_type_delete($entityform_type);
  }

  field_purge_batch($delete_count + 5);
}

/**
 * Delete subm from Admissions Transfer Option form
 */
function forms_update_7015() {
  _forms_delete_entityform_submissions('transfer_offer');
}

/**
 * Remove all traces of entityform type ilr_information_session_sign_in
 */
function forms_update_7016() {
  // Remove instances
  $fields_info = field_info_instances('entityform', 'ilr_information_session_sign_in');
  foreach ($fields_info as $field_in_form => $field_array) {
    $field_name = $field_array['field_name'];
    if ($instance = field_info_instance('entityform', $field_name,
      'ilr_information_session_sign_in')) {
        field_delete_instance($instance, TRUE);
        $delete_count++;
    }
  }

  // Delete the entityform type itself
  if ($entityform_type = entityform_type_load('ilr_information_session_sign_in')) {
    entityform_type_delete($entityform_type);
  }

  field_purge_batch($delete_count + 5);
}

/**
 * Delete 5 unused entityform types all for Alumni
 */
function forms_update_7017() {
  _forms_delete_entityform_type('groat_faculty_staff_registration');
  _forms_delete_entityform_type('groat_student_registration');
  _forms_delete_entityform_type('keith_strudler_lecture');
  _forms_delete_entityform_type('mlb_today_with_rob_manfred');
  _forms_delete_entityform_type('conversations_alumni_finance');
}

/**
 * Delete subm from Peer Mentoring and Fex/Wisp Sponsor forms
 */
function forms_update_7018() {
  _forms_delete_entityform_submissions('ilr_student_advisor_application_');
  _forms_delete_entityform_submissions('fex_wisp_sponsor_registration');
}

/**
 * Deletes the Peer Mentoring form
 */
function forms_update_7019() {
  _forms_delete_entityform_type('ilr_student_advisor_application_');
}

/**
* Delete one or more field instances from one entityform
* @param $form_id
* @param $field_names
*/
function _forms_delete_field_instances_from_entityform($form_id, $field_names) {
  $delete_count = 0;
  foreach ($field_names as $field_name) {
    if ($instance = field_info_instance('entityform', $field_name, $form_id)) {
      field_delete_instance($instance, TRUE);
      $delete_count++;
    }
  }

  /**
   * The fields aren't really deleted until the purge function runs, ordinarily
   * during cron.  In the loop above, count the number of fields we need to
   * purge, and add five in case a few other miscellaneous fields are in there
   * somehow.
   */
  field_purge_batch($delete_count + 5);
}

/**
 * Delete entityform submissions
 * @param $entityformtype
 */
function _forms_delete_entityform_submissions($entityform_type) {
  $result = db_select('entityform')
    ->fields('entityform', array('entityform_id'))
    ->condition('type', $entityform_type)
    ->execute()
    ->fetchAll();
  $eids = array();
  foreach ($result as $row) {
    $eids[] = $row->entityform_id;
  }
  entityform_delete_multiple($eids);
}

/**
 * Remove all traces of an entityform type
 */
function _forms_delete_entityform_type($eftype_to_delete) {
  $delete_count = 0;

  // Remove field instances from the entityform type
  $fields_info = field_info_instances('entityform', $eftype_to_delete);
  foreach ($fields_info as $instance) {
    field_delete_instance($instance, TRUE);
    $delete_count++;
  }

  // Delete the entityform type itself
  if ($entityform_type = entityform_type_load($eftype_to_delete)) {
    entityform_type_delete($entityform_type);
  }

  field_purge_batch($delete_count + 5);
}

