<?php
/**
 * @file
 * Code for the People Profile Import feature.
 */

include_once 'people_profile_import.features.inc';

/**
 * Implements hook_feeds_plugins()
 */
function people_profile_import_feeds_plugins() {
  $info = array();
  $info['ilr_profiles_feed_xml_parser'] = array(
    'name' => 'People Profiles XML feed parser',
    'description' => 'Imports faculty and staff data from the combined LDAP/Activity Insight XML feed.',
    'help' => '',
    'handler' => array(
      'parent' => 'FeedsParser',
      'class' => 'IlrProfilesFeedXmlParser',
      'file' => 'ilr_profiles_feed_xml_parser.inc',
      'path' => drupal_get_path('module', 'people_profile_import') . '/plugins/feeds',
    ),
  );
  return $info;
}

/**
 * Implements hook_feeds_presave().
 * Protects certain profile fields from being changed by the import
 */
function people_profile_import_feeds_presave($source, $entity, $item, $entity_id) {
  $fields_protected_from_import = array(
    'title',
    'field_first_name',
    'field_last_name',
    'field_working_title',
    'field_profile_image',
  );
  if ($source->importer->id == 'people_profile_xml_import') {
    // Check to see if it's an existing profile
    if ($entity_id) {
      // Load the unchanged entity
      $existing_profile = entity_load_unchanged('node', $entity_id);
      $existing_profile_wrapper = entity_metadata_wrapper('node', $existing_profile);
      $updated_profile_wrapper = entity_metadata_wrapper('node', $entity);
      foreach ($fields_protected_from_import as $key => $field_name) {
        if ($existing_value = $existing_profile_wrapper->{$field_name}->value()) {
          $updated_profile_wrapper->{$field_name}->set($existing_value);
        }
      }
    }
  }
}
