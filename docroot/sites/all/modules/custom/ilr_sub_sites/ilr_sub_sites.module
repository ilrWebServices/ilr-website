<?php

<<<<<<< HEAD
/**
 * Implements hook_preprocess_HOOK().
 * Adds a class to sub site homepages
 */
function ilr_sub_sites_preprocess_html(&$variables) {
  if ($node = menu_get_object()) {
    if (_ilr_sub_sites_is_sub_site_homepage($node)) {
      $variables['classes_array'][] = 'subsite-front';
    }
  }
}

/**
 * Gets the menu assignment of the current page.
 * See ilr_menu_block_blocks() in the profile.
 */
function _ilr_sub_sites_get_current_menu_name() {
  $node = menu_get_object();
  if ($node) {
    $menu_name = db_select('menu_links', 'ml')
      ->condition('ml.link_path', 'node/' . $node->nid)
      ->fields('ml', array('menu_name'))
      ->execute()
      ->fetchField();

    return strlen($menu_name) ? $menu_name : 'main-menu';
  }
  return 'main-menu';
}

/**
 * Concatenates menu names since they're limited to 32 characters.
 * See ilr_sub_sites_enable().
 */
function _ilr_sub_sites_get_menu_name_from_uri($uri) {
  $name = strtolower($uri);
  if (strlen($name) > 30) {
    $name = substr($name, 0, 30);
  }
  return $name;
}

/**
 * Determines whether the current node is a sub site homepage
 * This currently works because all sub sites are at ilr.cornell.edu/subsite.
 */
function _ilr_sub_sites_is_sub_site_homepage($node) {
  if (empty($node->nid)) {
    return FALSE;
  }
  $plid = db_select('menu_links', 'ml')
    ->condition('ml.link_path', 'node/' . $node->nid)
    ->fields('ml', array('plid'))
    ->execute()
    ->fetchField();
  return $plid === '0' || $plid === 0;
}
=======
//////////////////
// Drupal hooks //
//////////////////
>>>>>>> Alphabetizes sub sites module

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Form id = basic_page_node_form
 * Add form elements for create a submenu
 */
function ilr_sub_sites_form_basic_page_node_form_alter(&$form, &$form_state, $form_id) {
  /*
   * Only alter form if
   *  1. Not ILR Sub Page. @see ilr_sub_pages_create_sub_page.
   *  2. User can administer content types(might want 'administer sub site' permission in future).
   *  3. $form['menu'] has been set by menu module.
   *  4. The node is new
   */
  if (empty($form_state['#ilr_sub_page']) && user_access('administer content types') && isset($form['menu']) && !isset($form['nid']['#value'])) {
    if (_ilr_sub_sites_is_sub_site_homepage($form['#node'])) {
      $form['menu']['#access'] = FALSE;
      // Inform administrators how to remove as sub site.
      drupal_set_message('This page is currently a sub site homepage. To change this you must use the menu administration screens.');
    }
    else {
      // This page is not currently a sub site.
      $form['menu']['create_subsite'] = array(
        '#type' => 'checkbox',
        '#title' => t('Create Subsite Menu'),
        '#description' => t('Create a new sub site menu and add a link to this node at the top level.'),
        '#states' => array(
          'invisible' => array(
            'input[name="menu[enabled]"]' => array(
              'checked' => TRUE,
            ),
          ),
        ),
      );
      $form['menu']['subsite_title'] = array(
        '#type' => 'textfield',
        '#title' => t('Menu Title'),
        '#description' => t('If blank then the page title will be used.'),
        '#states' => array(
          'invisible' => array(
            'input[name="menu[create_subsite]"]' => array(
              'checked' => FALSE,
            ),
          ),
        ),
      );
      $form['menu']['enabled']['#states'] = array(
        'invisible' => array(
          'input[name="menu[create_subsite]"]' => array(
            'checked' => TRUE,
          ),
        ),
      );
      $form['#validate'][] = '_ilr_sub_sites_basic_page_validate';
    }
  }
}

/**
 * Implements hook_module_implements_alter().
 *
 * Form alter has to run after menu module's implementation.
 */
function ilr_sub_sites_module_implements_alter(&$implementations, $hook) {
  switch ($hook) {
    case 'form_alter':
      if (isset($implementations['ilr_sub_sites'])) {
        $group = $implementations['ilr_sub_sites'];
        unset($implementations['ilr_sub_sites']);
        $implementations['ilr_sub_sites'] = $group;
      }

  }
}

/**
 * Implements hook_node_insert().
 */
function ilr_sub_sites_node_insert($node) {
  _ilr_sub_sites_create_sub_menu_for_node($node);
}

/**
 * Implements hook_preprocess_HOOK().
 * Adds a class to sub site homepages
 */
function ilr_sub_sites_preprocess_html(&$variables) {
  if ($node = menu_get_object()) {
    if (_ilr_sub_sites_is_sub_site_homepage($node)) {
      $variables['classes_array'][] = 'subsite-front';
    }
  }
}


//////////////////////
// Custom functions //
//////////////////////

/**
 * Validate callback for basic page form.
 *
 * Don't allow adding a menu item and setting a subsite.
 */
function _ilr_sub_sites_basic_page_validate($form, &$form_state) {
  $menu_values = $form_state['values']['menu'];
  if (!empty($menu_values['create_subsite'])) {
    // This shouldn't happen because of JS but just in case.
    if (!empty($menu_values['enabled'])) {
      form_error($form['menu'], t('You cannot create both a menu link and a sub site menu.'));
      return;
    }
  }

}

/**
 * Create sub site menu.
 *
 * It will also be added as a menu option for basic pages
 * @param $title
 * @param null $uri
 *  If not provided it will be generated.
 * @return string
 *  Menu machine name.
 */
function _ilr_sub_sites_create_menu($title, $uri = NULL) {
  if (!$uri) {
    $uri = drupal_clean_css_identifier($title);
  }
  // Look the table first if the data does exist
  $machine_name = _ilr_sub_sites_get_menu_name_from_uri($uri);

  $menu_name = db_query("SELECT menu_name FROM {menu_custom} WHERE menu_name=:menu_name", array(':menu_name' => $machine_name))->fetchField();
  // Save the record if the data does not exist
  if (!$menu_name) {
    $menu = array(
      'menu_name' => $machine_name,
      'title' => $title,
      'description' => t('SubSite menu'),
    );
    menu_save($menu);

    // Add as a menu option for basic page.
    $menu_options = variable_get('menu_options_basic_page', array());
    $menu_options[] = $machine_name;
    variable_set('menu_options_basic_page', $menu_options);
  }
  return $machine_name;
}

/**
 * Workaround b/c pathauto_create_alias() not setting the alias
 * @todo Debug so this function is not required
 */
function _ilr_sub_sites_create_pathauto_alias($node) {
  module_load_include('inc', 'pathauto');
    $alias = preg_replace('@[^a-z0-9-]+@','-', strtolower($node->title));
    $path = array(
      'source' => 'node/' . $node->nid,
      'alias' => $alias,
      'language' => LANGUAGE_NONE,
    );
    _pathauto_set_alias($path, NULL, 'insert');
}

/**
 * Create subsite menu for a node.
 *
 * Creates menu and adds link to node to menu
 * @param $node
 */
function _ilr_sub_sites_create_sub_menu_for_node($node) {
  if ($node->type == 'basic_page' && !empty($node->menu['create_subsite'])) {
    $menu_title = empty($node->menu['subsite_title']) ? $node->title : $node->menu['subsite_title'];
    $menu_name = _ilr_sub_sites_create_menu($menu_title);
    // Create node link on new menu
    $link = array(
      'link_path' => 'node/' . $node->nid,
      'link_title' => $node->title,
      'menu_name' => $menu_name,
    );
    menu_link_save($link);
    _ilr_sub_sites_create_pathauto_alias($node);
    return;
  }
}

/**
 * Gets the menu assignment of the current page.
 * See ilr_menu_block_blocks() in the profile.
 */
function _ilr_sub_sites_get_current_menu_name() {
  $node = menu_get_object();
  if ($node) {
    $menu_name = db_select('menu_links', 'ml')
      ->condition('ml.link_path', 'node/' . $node->nid)
      ->fields('ml', array('menu_name'))
      ->execute()
      ->fetchField();

    return strlen($menu_name) ? $menu_name : 'main-menu';
  }
  return 'main-menu';
}

/**
 * Concatenates menu names since they're limited to 32 characters.
 * See ilr_sub_sites_enable().
 */
function _ilr_sub_sites_get_menu_name_from_uri($uri) {
  $name = strtolower($uri);
  if (strlen($uri) > 30) {
    $name = substr($uri, 0, 30);
  }
  return $name;
}

/**
 * Determines whether the current node is a sub site homepage
 * This currently works because all sub sites are at ilr.cornell.edu/subsite.
 */
function _ilr_sub_sites_is_sub_site_homepage($node) {
  if (empty($node->nid)) {
    return FALSE;
  }
  $plid = db_select('menu_links', 'ml')
    ->condition('ml.link_path', 'node/' . $node->nid)
    ->fields('ml', array('plid'))
    ->execute()
    ->fetchField();
  return $plid === '0' || $plid === 0;
}
