<?php
/**
 * @file ilr_bean_views.module
 * This module allows Views Content Panes to be used as Bean types.
 * To add a new View add info to _ilr_bean_views_get_used_displays().
 */
/**
 * Implements hook_bean_types_api_info().
 */
function ilr_bean_views_bean_types_api_info() {
  return array('api' => 4);
}

/**
 * Implements hook_bean_types().
 */
function ilr_bean_views_bean_types() {
  $bean_types = &drupal_static(__FUNCTION__);
  if (!isset($bean_types)) {
    // Getting Views information causes recursion
    // So check if static variable is set.
    $bean_types = array();
    $bean_types = _ilr_bean_views_get_bean_types();
  }
  if (empty($bean_types)) {
    return;
  }
  $plugins = array();
  $bean_type_num = 1;
  foreach ($bean_types as $bean_type_name => $subtypes) {
    $plugins['bean_view_type_' . $bean_type_num++] = array(
      'label' => $bean_type_name,
      //'description' => t($display->display_options['display_description']),\
      'subtypes' => $subtypes,
      // 'view' => $view_name,
      //'display_id' => $display_id,
      //'parent_thing' => 'partent value',
      'handler' => array(
        'class' => 'IlrViewBean',
        'parent' => 'bean',
        'path' => drupal_get_path('module', 'ilr_bean_views') . '/plugins/bean',
        'file' => 'bean_view.inc',
        //'parent_thing2' => 'partent value2',
      ),
    );
  }


  return $plugins;
}

/**
 * Utility Function to get bean types.
 *
 * A Bean Type is made for each View Pane Category.
 * @return array
 */
function _ilr_bean_views_get_bean_types() {
  $used_views = _ilr_bean_views_get_used_displays();
  $used_displays = array();
  $bean_types = array();
  foreach ($used_views as $view_name => $display_ids) {
    $view = views_get_view($view_name);
    if ($view) {
      // Ensure displays are actually on View
      $displays = array_intersect_key($view->display, array_flip($display_ids));
      foreach ($displays as $display_id => $display) {
        if (isset($display->display_options['pane_category'])) {
          $bean_type_name = $display->display_options['pane_category']['name'];
        }
        else {
          $bean_type_name = 'View Panes';
        }
        $bean_types[$bean_type_name]["$view_name-$display_id"] = $display->display_title;
      }

    }

  }
  return $bean_types;
}

/**
 * Separate out used displays
 *
 * More displays should be added here.
 * @return array
 */
function _ilr_bean_views_get_used_displays() {
  $used_views = array(
    'ilr_filtered_courses' => array(
      'bean_pane_filtered',
      'panel_pane_1',
    ),
  );
  return $used_views;
}

/**
 * Ajax Callback for selecting View Display.
 *
 * Return fieldset for View Pane config form.
 */
function _ilr_bean_view_ajax_select_display($form, $form_state) {
  $form['view_pane'] += views_content_views_panes_content_type_edit_form(array(), $form_state);
  return $form['view_pane'];

}