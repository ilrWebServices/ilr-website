<?php
/**
 * @file
 * Code for the Google Ecommerce Tracking Implementation
 */

/**
 * Implements hook_freedompay_order_complete().
 * Sets the session var for the order id
 * @param  FreedomPayOrder $order
 */
function google_ecommerce_tracking_freedompay_order_complete($order, $type, $form_id) {
  if (!ilr_is_production_site()) { // Don't track when testing
    return;
  }
  $_SESSION['google_ecommerce_tracking_order_id'] = $order->id;
}

function google_ecommerce_tracking_track_order($order) {
  if (freedompay_payment_required()) {
    if ($payload = freedompay_checkout_payload()) {
      _google_ecommerce_tracking_add_datalayer($order, $payload);
      unset($_SESSION['google_ecommerce_tracking_order_id']);
    }
    else {
      watchdog('google_ecommerce_tracking', "Payload failed to load when attempting to track payment form @form_id",
        array(
          '@form_id' => $order->id,
        ),
        WATCHDOG_ERROR
      );
    }
  }
  else { // Payment wasn't required
    unset($_SESSION['google_ecommerce_tracking_order_id']);
  }
}

function _google_ecommerce_tracking_add_datalayer($order, $payload) {
  $invoice = FreedompayInvoice::getInvoiceByOrderId($order->id);
  $hpp = FreedompayHpp::getPortalForType($order->entity_type, $order->bundle);
  $transaction_total = freedompay_transaction_total();
  $data_layer = array();
  $data_layer[] = [
     'transactionId' => $invoice->formatInvoiceNumber(),
     'transactionAffiliation' => $hpp->title,
     'transactionTotal' => $transaction_total,
     'transactionProducts' => _google_ecommerce_tracking_get_products($payload, $invoice->prefix),
  ];

  $script = 'dataLayer=';
  $script .= json_encode($data_layer);

  drupal_add_js($script, array('scope' => 'header', 'type' => 'inline'));
}

function _google_ecommerce_tracking_get_products($payload, $prefix) {
  $products = [];
  if (isset($payload['PurchaseItems'])) {
    foreach ($payload['PurchaseItems'] as $item) {
      $products[] = _google_ecommerce_tracking_format_product($item, $prefix);
    }
  }
  return $products;
}

function _google_ecommerce_tracking_format_product($product, $prefix) {
  return array(
   'sku' => $prefix,
   'name' => $product['Description'],
   'price' => $product['Price'],
   'quantity' => $product['Quantity']
  );
}
