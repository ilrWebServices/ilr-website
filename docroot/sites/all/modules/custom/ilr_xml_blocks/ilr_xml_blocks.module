<?php

function ilr_xml_blocks_block_info() {
  $blocks['ldi_recent'] = array(
    'info' => t('LDI Recent Docs Summary'),
  );

  $blocks['ldi_recent_all'] = array(
    'info' => t('LDI Recent Docs All'),
  );

  $blocks['vrdc'] = array(
    'info' => t('VirtualRDC'),
  );

  $blocks['statistics'] = array(
    'info' => t('World of Statistics'),
  );

  return $blocks;
}

function ilr_xml_blocks_block_view($delta='') {
  $block = array(
    'subject' => _ilr_xml_blocks_get_subject($delta),
    'content' => _ilr_xml_blocks_generate_markup_for_block($delta),
  );
  return $block;
}

function _ilr_xml_blocks_generate_markup_for_block($delta) {
  $markup = '<div class="'. $delta .'">';
  $xml = simplexml_load_string(_ilr_xml_blocks_get_xml_data($delta));
  if (!empty($xml)) {
    $markup .= "<ul>";
    $counter = 0;
    foreach ($xml->channel->item as $item) {
      if ($delta != 'ldi_recent_all' && $counter > 2) {
        continue;
      }
      $markup .= _ilr_xml_blocks_generate_item_markup($item, $delta);
      $counter++;
    }
    $markup .= '</ul>';
  }
  $markup .= "</div>";
  return $markup;
}

function _ilr_xml_blocks_generate_item_markup($item, $delta) {
  $markup = '<li><a href="'. $item->link .'">'. $item->title . '</a><br />';
  if ($delta == 'ldi_recent_all') {
    $markup .= $item->author . '</li>';
  } else {
    $description = _ilr_xml_blocks_format_description($item->description);
    $markup .=  $description . '<br />';
    $markup .= _ilr_xml_blocks_format_date($item->pubDate);
    $markup .= '</li>';
  }
  return $markup;
}

/**
 * Formats the xml feed description
 */
function _ilr_xml_blocks_format_description($description, $length = 125) {
  $formatted = strip_tags($description);
  $formatted = str_replace("\n",' ', $formatted);
  return truncate_utf8($formatted, $length, true, true);
}

/**
 * Formats the date (ie Fri, Apr. 28, 2015)
 */
function _ilr_xml_blocks_format_date($date) {
  $date = new DateTime($date);
  $markup = $date->format('D, M. d, Y');
  return $markup;
}

/**
 * Retrieves the xml from url or cache
 */
function _ilr_xml_blocks_get_xml_data($key) {
  $xml_data = '';
  $key = ($key == 'ldi_recent_all') ? 'ldi_recent' : $key; // It's the same xml for both
  if ($cache = cache_get($key)) {
    $xml_data = $cache->data;
  } else {
    if ($url = _ilr_xml_blocks_get_xml_url($key)) {
      $xml_data = file_get_contents($url);
      cache_set($key, $xml_data, 'cache', time() + 60 * 60 * 24);// 60 * 60 * 24 = 24 hours
    }
  }
  return $xml_data;
}

/**
 * Returns the url for the given key
 */
function _ilr_xml_blocks_get_xml_url($delta) {
  $urls = array(
    'ldi_recent' => 'http://digitalcommons.ilr.cornell.edu/ldi/recent.rss',
    'vrdc' => 'http://www2.vrdc.cornell.edu/news/feed/',
    'statistics' => 'http://www.worldofstatistics.org/feed/',
  );
  return (isset($urls[$delta])) ? $urls[$delta] : NULL;
}

/**
 * Returns the url for the given key
 */
function _ilr_xml_blocks_get_subject($delta) {
  $subjects = array(
    'ldi_recent' => 'Recent Documents from LDI',
    'ldi_recent_all' => '',
    'vrdc' => 'VirtualRDC &#64; Cornell',
    'statistics' => 'World of Statistics',
  );
  return (isset($subjects[$delta])) ? $subjects[$delta] : '';
}
