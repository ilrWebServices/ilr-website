<?php

require_once variable_get('config_dir') .  '/get_secrets.php';

/**
 * Implements hook_install()
 * Loops through the roles in the system and creates a test user for that role
 */

function ilr_dev_install() {
  variable_set('site_name','ILR Dev Site');
  variable_set('file_public_path','sites/default/files');
  variable_set('file_private_path','sites/default/files/private');
  variable_set('stage_file_proxy_origin','http://www.ilr.cornell.edu');
  variable_set('stage_file_proxy_origin_dir','sites/ilr.cornell.edu/files');
  variable_set('features_rebuild_on_flush',FALSE);
  variable_set('entity_rebuild_on_flush',FALSE);
  variable_set('freedompay_environment', 'testing');
  // Set the simplesamlphp path
  variable_set('simplesamlphp_auth_installdir', '/var/www/ilr-website/simplesamlphp-1.14.3');

  // Disable any modules we don't want running locally
  module_disable(array(
    'securepages',
    'google_analytics_universal',
  ));

  // Allow anonymous users to see dpm messages locally
  if (module_exists('devel')) {
    user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access devel information'));
    user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access devel information'));
  }

  if (module_exists('freedompay')) {
    _ilr_dev_set_freedompay_test_credentials();
  }

  // Comment out until we fix the issue with the sf test instances and
  // 10,000 record limit
  // _ilr_dev_set_salesforce_test_credentials();
}

/**
 * Updates the hpp values for testing when local
 */
function _ilr_dev_set_freedompay_test_credentials() {
  global $ILR_SECRETS;
  if (isset($ILR_SECRETS['freedompay'])) {
    $portals = FreedompayHpp::getPortals();
    if (!empty($portals)) {
      foreach ($portals as $portal) {
        $name = strtolower($portal->title);
        // Now check for a match in the secrets file
        if (array_key_exists($name, $ILR_SECRETS['freedompay'])) {
          $portal->store_id = $ILR_SECRETS['freedompay'][$name]['testing']['store_id'];
          $portal->terminal_id = $ILR_SECRETS['freedompay'][$name]['testing']['terminal_id'];
          $portal->save();
        } // There is a mismatched key
        else {
          drupal_set_message(t('There was an error setting the test credentials for the '.$portal->title.' portal. Please check the secrets file for a key mismatch.'), 'error');
        }
      }
    }
  } // Secrets file needs to be updated
  else {
    drupal_set_message(t('Your site secrets are out of date. Please download a version that includes the FreedomPay test credentials.'), 'error');
  }
}

function _ilr_dev_set_salesforce_test_credentials() {
  global $ILR_SECRETS;
  if (isset($ILR_SECRETS['salesforce'])) {
    foreach ($ILR_SECRETS['salesforce'] as $key => $value) {
      variable_set($key, $value);
    }
  }
}
