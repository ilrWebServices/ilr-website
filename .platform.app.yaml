# This file describes an application. You can have multiple applications
# in the same project.
#
# See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html

# The name of this app. Must be unique within a project.
name: 'app'

# The runtime the application uses.
type: 'php:7.1'

runtime:
  extensions:
    - mcrypt

variables:
  php:
    post_max_size: 256M
    upload_max_filesize: 256M
    display_errors: Off
    display_startup_errors: Off
    short_open_tag: On

# Configuration of the build of this application.
build:
  flavor: drupal

# The build-time dependencies of the app.
dependencies:
  php:
    "drush/drush": "^8.0"
  nodejs: {}

# The relationships of the application with services or other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
    database: 'mysqldb:mysql'
#    solr: 'solrsearch:solr'
#    redis: 'rediscache:redis'

# The configuration of app when it is exposed to the web.
web:
  # Specific parameters for different URL prefixes.
  locations:
    '/':
      # The folder from which to serve static assets, for this location.
      #
      # This is a filesystem path, relative to the application root.
      root: 'docroot'

      # How long to allow static assets from this location to be cached.
      #
      # Can be a time in seconds, or -1 for no caching. Times can be
      # suffixed with "s" (seconds), "m" (minutes), "h" (hours), "d"
      # (days), "w" (weeks), "M" (months, as 30 days) or "y" (years, as
      # 365 days).
      expires: 5m

      # Whether to forward disallowed and missing resources from this
      # location to the application.
      #
      # Can be true, false or a URI path string.
      passthru: '/index.php'

      # Deny access to static files in this location.
      allow: false

      # Rules for specific URI patterns.
      rules:
        # Allow access to common static files.
        '\.(jpe?g|JPE?G|png|gif|svgz?|css|js|map|ico|bmp|pdf|pptx?|docx?|xlsx?)$':
            allow: true
        # Web fonts are common files, but we also want other sites to be able to load them.
        '\.(eot|woff2?|otf|ttf)$':
            allow: true
            headers:
              'Access-Control-Allow-Origin': '*'
        '^/robots\.txt$':
            allow: true
        '^/sitemap\.xml$':
            allow: true

    '/sites/default/files':
      # Allow access to all files in the public files directory.
      allow: true
      expires: 5m
      passthru: '/index.php'
      root: 'docroot/sites/default/files'
      scripts: false # Do not execute PHP scripts.
      rules:
        # Provide a longer TTL (2 weeks) for aggregated CSS and JS files.
        '^/sites/default/files/(css|js)':
            expires: 2w

    '/simplesaml':
      root: 'simplesamlphp-1.17.7/www'
      allow: true
      scripts: true
      index:
        - index.php

# The size of the persistent disk of the application (in MB).
# 21504 = 21GB (requires an additional 2048 for mysql service)
disk: 21504

# The mounts that will be performed when the package is deployed.
mounts:
  '/docroot/sites/default/files': 'shared:files/files'
  '/tmp': 'shared:files/tmp'
  '/private': 'shared:files/private'
  '/ilr_config': 'shared:files/ilr_config'
  '/scripts': 'shared:files/scripts'
  '/drush-backups': 'shared:files/drush-backups'

# The hooks executed at various points in the lifecycle of the application.
hooks:
  build: |
    curl -sS https://platform.sh/cli/installer | php
    set -e
    npm install
    npm run build
  # We run deploy hook after your application has been deployed and started.
  deploy: |
    set -e
    cd docroot
    drush -y updatedb

# The configuration of scheduled execution.
crons:
  drupal:
    # Run cron daily at 8am UTC
    spec: '0 8 * * *'
    cmd: 'cd docroot ; drush core-cron'
  # @todo review and see if we can't just run the copy in ~/bin or just run the
  # curl command here. Someday, the PMS will replace this.
  profile-trigger:
    spec: '30 3 * * *'
    cmd: 'cd ~/scripts ; sh ilr_profiles_data_pull.sh'
  snapshot:
    # Take a snapshot automatically every night at 6am (UTC).
    spec: '0 6 * * *'
    cmd: |
      if [ "$PLATFORM_BRANCH" = master ]; then
        platform snapshot:create --yes --no-wait
      fi
  renewcert:
    # Force a redeploy at 5 am (UTC) on the 28th of every month.
    spec: '0 5 28 * *'
    cmd: |
      if [ "$PLATFORM_BRANCH" = master ]; then
        platform redeploy --yes --no-wait
      fi
